# Generated by Django 3.2.25 on 2024-08-28 15:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsor', models.CharField(max_length=64, verbose_name='发起者')),
                ('group_name', models.CharField(max_length=64, verbose_name='发起者所属SIG')),
                ('community', models.CharField(max_length=16, verbose_name='发起者所在社区')),
                ('topic', models.CharField(max_length=128, verbose_name='会议主题')),
                ('platform', models.CharField(max_length=16, verbose_name='会议所属平台')),
                ('date', models.CharField(max_length=32, verbose_name='会议日期')),
                ('start', models.CharField(max_length=32, verbose_name='会议开始时间')),
                ('end', models.CharField(max_length=32, verbose_name='会议结束时间')),
                ('agenda', models.TextField(blank=True, default='', null=True, verbose_name='会议议程')),
                ('etherpad', models.CharField(blank=True, max_length=256, null=True, verbose_name='会议纪要etherpad')),
                ('email_list', models.TextField(blank=True, null=True, verbose_name='邮件列表')),
                ('host_id', models.EmailField(blank=True, max_length=254, null=True, verbose_name='会议host_id')),
                ('mid', models.CharField(max_length=32, verbose_name='会议id')),
                ('m_mid', models.CharField(blank=True, max_length=32, null=True, verbose_name='腾讯会议id')),
                ('join_url', models.CharField(blank=True, max_length=128, null=True, verbose_name='进入会议url')),
                ('is_record', models.SmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否录制')),
                ('upload_status', models.SmallIntegerField(choices=[(0, '初始化'), (1, '已经上传OBS'), (2, '已经上传BILI'), (10, '全部已经上传完成')], default=0, verbose_name='上传状态')),
                ('replay_url', models.CharField(blank=True, max_length=128, null=True, verbose_name='回放会议url')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(blank=True, null=True, verbose_name='修改时间')),
                ('sequence', models.IntegerField(default=1, verbose_name='修改次数')),
                ('is_delete', models.SmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='是否删除')),
            ],
            options={
                'verbose_name': 'meetings',
                'verbose_name_plural': 'meetings',
                'db_table': 'meetings',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'user',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
